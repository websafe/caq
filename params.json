{"name":"Caq","tagline":"Composed Application Quickstarter - A simple Bash script for automated preparation of Composer based applications","body":"caq - Composed Application Quickstarter\r\n================================================================================\r\n\r\nA simple [Bash] script for automated preparation of [Composer] based\r\napplications (i.e. [ZendFramework] apps).\r\n\r\n\r\nInstallation\r\n--------------------------------------------------------------------------------\r\n\r\n### General installation procedure\r\n\r\nOnly `caq.sh`(https://raw.github.com/websafe/caq/master/caq.sh) is really\r\nrequired, download it into a location available via PATH and make it executable.\r\nThat's all.\r\n\r\n\r\n### Install using [PHP]\r\n\r\n~~~~\r\nphp -r \\\r\n    \"copy('https://raw.github.com/websafe/caq/master/caq.sh', '/usr/bin/caq');\"\r\nchmod +x /usr/bin/caq\r\n~~~~\r\n\r\n\r\n### Install using [Wget]\r\n\r\n~~~~\r\nwget -nc \\\r\n    https://raw.github.com/websafe/caq/master/caq.sh \\\r\n    -O /usr/bin/caq\r\nchmod +x /usr/bin/caq\r\n~~~~\r\n\r\n\r\n`-ns` stands for `--no-clobber`:\r\n\r\n>  -nc, --no-clobber              skip downloads that would download to\r\n>                                 existing files (overwriting them).\r\n\r\n\r\n### Install using [Lynx]\r\n\r\n~~~~\r\nlynx -dump \\\r\n    https://raw.github.com/websafe/caq/master/caq.sh \\\r\n    > /usr/bin/caq\r\nchmod +x /usr/bin/caq\r\n~~~~\r\n\r\n\r\nUsage\r\n--------------------------------------------------------------------------------\r\n\r\n### Basic usage\r\n\r\nBasic usage is:\r\n\r\n~~~~\r\ncaq <vendor>/<project> <profile>\r\n~~~~\r\n\r\n\r\n### Example 1. A [ZendSkeletonAplication] based project with [ZendFramework] \r\n\r\nThis will create a project located in directory `./my-example-1` based \r\non [ZendSkeletonApplication] with [ZendFramework] installed as a [Composer]\r\npackage in `./vendor/zendframework`:\r\n\r\n~~~~\r\ncaq myvendor/my-example-1 zf2-app\r\n~~~~\r\n\r\n\r\n### Example 2. An empty project with [ZendFramework] libraries\r\n\r\nThis will create a project located in directory `./my-example-2` based \r\non nothing (no skeleton application) with [ZendFramework] installed as a\r\n[Composer] package in `./vendor/zendframework`, in other words, a project\r\nwith the pure framework, no application:\r\n\r\n~~~~\r\ncaq myvendor/my-example-2 zf2\r\n~~~~\r\n\r\n\r\n### Example 3. An empty project with [Symfony] libraries\r\n\r\nThis will create a project located in directory `./my-example-3` based \r\non nothing (no skeleton application) with [Symfony] installed as [Composer] \r\npackage in `./vendor/symfony`:\r\n\r\n~~~~\r\ncaq myvendor/my-example-3 symfony\r\n~~~~\r\n\r\n\r\n### Example 4. A [WordPress] based project\r\n\r\nThis will create a project located in directory `./my-example-4` based \r\non [WordPress]:\r\n\r\n~~~~\r\ncaq myvendor/my-example-4 wordpress\r\n~~~~\r\n\r\n\r\n### Example 5. A [ZendSkeletonAplication] based project with [ZendFramework] libraries and [ZfcUser] module  \r\n\r\nThis will create a project located in directory `./my-example-5` based \r\non [ZendSkeletonApplication] with [ZendFramework] installed as a [Composer]\r\npackage in `./vendor/zendframework/zendframework` and [ZfcUser] module installed\r\nas a [Composer] package in `./vendor/zf-commons/zfc-user`:\r\n\r\n~~~~\r\ncaq myvendor/my-example-5 zf2-app-zfc-user\r\n~~~~\r\n\r\n\r\n\r\nContributing\r\n--------------------------------------------------------------------------------\r\n\r\n + Start using [caq]!\r\n + [Report issues]\r\n + [Request features]\r\n + Read\r\n   [14 Ways to Contribute to Open Source without Being a Programming Genius]\r\n\r\n\r\nRequirements\r\n--------------------------------------------------------------------------------\r\n\r\n + [Bash]\r\n + [Composer]\r\n + [Git]\r\n + [grep]\r\n + [PHP]\r\n + [GNU sed]\r\n\r\n\r\nTODO\r\n--------------------------------------------------------------------------------\r\n + check if profile exists and notify when using default.\r\n + create documentation describing [Profiles]\r\n + create terms section in readme\r\n + classmap_generator after installing deps\r\n + Create README.md if not exists\r\n + Create LICENSE.md if LICENSE.md|LICENSE.txt|LICENSE not exist\r\n + User configs profiles in ~/.caq/\r\n + User templates for faster creation of projects (stored in ~/.caq/templates)\r\n + Plugins\r\n + Profiles testsuite\r\n + travis\r\n + testprofiles - with/without skeleton, with/without packages, emtpy, etc.\r\n + initiate local git repository for generated project\r\n + Windows/Cygwin compatible\r\n\r\n\r\nHow caq works\r\n--------------------------------------------------------------------------------\r\n\r\n### The basic procedure\r\n\r\n**THIS SECTION IS INCOMPLETE**\r\n\r\n 1.\tIf there is a [Skeleton Application] URI configured, try to clone this\r\n\trepo into projects root directory.\r\n\tIf no skeleton URI was configured, skip to next step.\r\n\r\n 2.\tInstall [Composer] in vendor/bin of projects root directory.\r\n\r\n 3.\tSelfupdate the previously installed [Composer]\r\n\r\n 4.\tInstall all packages ([Composer] packages) configured for the current\r\n\tProfile. If no packages were defined, skip to next step.\r\n\r\n\r\nBasically, when You don't define a Skeleton Application URI (SA)\r\nand don't define any packages (PKG) You'll end up with an empty\r\nproject, containing:\r\n\r\n\r\n~~~~\r\n + project-name\r\n   + vendor\r\n     + bin\r\n       + composer.phar\r\n     + composer\r\n       + ClassLoader.php\r\n       + autoload_classmap.php\r\n       + autoload_namespaces.php\r\n       + autoload_real.php\r\n     + autoload.php\r\n     + .gitignore\r\n   + .gitignore\r\n   + composer.json\r\n   + README.md\r\n   + LICENSE.md\r\n~~~~\r\n\r\n\r\nLicense\r\n--------------------------------------------------------------------------------\r\n\r\ncaq - Composed Application Quickstarter (https://github.com/websafe/caq/)\r\n\r\nCopyright (c) 2013 Thomas Szteliga <ts@websafe.pl>, http://websafe.pl/\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n\r\n\r\nLinks\r\n--------------------------------------------------------------------------------\r\n\r\n + [14 Ways to Contribute to Open Source without Being a Programming Genius] - \r\n + [Bash] - \r\n + [Composer] - \r\n + [GNU sed] - \r\n + [GitHub] - \r\n + [Git] - \r\n + [Lynx] - \r\n + [PHPUnit] - The PHP Unit Testing framework\r\n + [PHP] - \r\n + [Report issues] - \r\n + [Request features] - \r\n + [Symfony] - The Symfony PHP framework\r\n + [Wget] - \r\n + [Wiki] - Caq Wiki\r\n + [WordPress] - \r\n + [ZendFramework] - Framework for modern high-performing PHP applications\r\n + [ZendSkeletonAplication] - Sample application skeleton using the ZF2 MVC layer\r\n + [ZendSkeletonApplication] - \r\n + [ZfcUser] - A generic user registration and authentication module for ZF2. Supports Zend\\Db and Doctrine2.\r\n + [caq] - caq - Composed Application Quickstarter\r\n + [grep] - \r\n + [phpDocumentor] - Documentation Generator for PHP\r\n\r\n\r\n[Bash]: http://www.gnu.org/software/bash/bash.html\r\n[Composer]: http://getcomposer.org/\r\n[ZendFramework]: http://framework.zend.com/ \"Framework for modern high-performing PHP applications\"\r\n[ZendSkeletonApplication]: https://github.com/zendframework/ZendSkeletonApplication\r\n[Git]: http://git-scm.com/\r\n[GitHub]: https://github.com/\r\n[grep]: http://www.gnu.org/software/grep/\r\n[Wget]: http://www.gnu.org/software/wget/\r\n[Lynx]: http://lynx.isc.org/\r\n[PHP]: http://php.net/\r\n[GNU sed]: http://www.gnu.org/software/sed/\r\n[caq]: http://websafe.github.com/caq/ \"caq - Composed Application Quickstarter\"\r\n[Report issues]: https://github.com/websafe/caq/issues\r\n[Request features]: https://github.com/websafe/caq/issues?labels=enhancement&page=1&state=open\r\n[Wiki]: https://github.com/websafe/caq/wiki/ \"Caq Wiki\"\r\n[Symfony]: http://symfony.com/ \"The Symfony PHP framework\"\r\n[14 Ways to Contribute to Open Source without Being a Programming Genius]: http://blog.smartbear.com/software-quality/bid/167051/14-Ways-to-Contribute-to-Open-Source-without-Being-a-Programming-Genius-or-a-Rock-Star\r\n[ZendSkeletonAplication]: https://github.com/zendframework/ZendSkeletonApplication \"Sample application skeleton using the ZF2 MVC layer\"\r\n[WordPress]: https://github.com/WordPress/WordPress\r\n[phpDocumentor]: http://www.phpdoc.org/ \"Documentation Generator for PHP\"\r\n[PHPUnit]: https://github.com/sebastianbergmann/phpunit/ \"The PHP Unit Testing framework\"\r\n[ZfcUser]: https://github.com/ZF-Commons/ZfcUser \"A generic user registration and authentication module for ZF2. Supports Zend\\Db and Doctrine2.\"\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}